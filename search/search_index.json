{"config":{"indexing":"full","lang":["es"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenido Este material fue realizado por Alejandro Leyva , enfocado al aprendizaje de algoritmos y diagramas de flujo; para el M\u00f3dulo III : _ , del Subm\u00f3dulo II: Utiliza y programa tarjetas de control para sistemas mecatronicos . Cualquier detalle, mejora, correcci\u00f3n o error notificarme a mi correo : al correo alejandro.leyva.us@gmail.com , o en su defecto hacer un pull-request al repositorio Para navegar utilizar el menu de lado izquierdo Iniciar -> Mapa del sitio Herramientas utilizadas Python : Scripts de automatizaci\u00f3n markmap : Mapas mentales drawio : Simbolog\u00eda yy diagramas MkDocs : Para la construcci\u00f3n base del sitio MkDocs Material : Para el tema y los plugins PSeint : Pseudoc\u00f3digo y diagramas de flujo","title":"Bienvenido"},{"location":"#bienvenido","text":"Este material fue realizado por Alejandro Leyva , enfocado al aprendizaje de algoritmos y diagramas de flujo; para el M\u00f3dulo III : _ , del Subm\u00f3dulo II: Utiliza y programa tarjetas de control para sistemas mecatronicos . Cualquier detalle, mejora, correcci\u00f3n o error notificarme a mi correo : al correo alejandro.leyva.us@gmail.com , o en su defecto hacer un pull-request al repositorio Para navegar utilizar el menu de lado izquierdo Iniciar ->","title":"Bienvenido"},{"location":"#mapa-del-sitio","text":"","title":"Mapa del sitio"},{"location":"#herramientas-utilizadas","text":"Python : Scripts de automatizaci\u00f3n markmap : Mapas mentales drawio : Simbolog\u00eda yy diagramas MkDocs : Para la construcci\u00f3n base del sitio MkDocs Material : Para el tema y los plugins PSeint : Pseudoc\u00f3digo y diagramas de flujo","title":"Herramientas utilizadas"},{"location":"00_Algoritmos/","text":"Algoritmos y Diagramas de Flujo Definiciones Algoritmo Algoritmo Es una secuencia de pasos finitos y ordenados, para resolver un problema. Ejemplos Receta de cocina Un Manual Un set de instrucciones Un procedimiento Un protocolo Una secuencia Un plan Una estrategia Diagrama de flujo Diagrama de Flujo Es una representaci\u00f3n gr\u00e1fica de un algoritmo. Pseudoc\u00f3digo Es una manera de expresar un algoritmo de manera natural, muy cercano a una receta de cocina o unas simples instrucciones. Ejemplo: Escribir el mensaje en pantalla \"Ingrese el primer numero:\" Almacenar en la variable A el valor dado por el usuario Escribir el mensaje en pantalla \"Ingrese el segundo numero:\" Almacenar en la variable B el valor dado por el usuario Sumo la variable A y B, lo almaceno en la variable C Escribir en la pantalla el mensaje \"El resultado es: \", junto al contenido de la variable C","title":"Algoritmos y Diagramas de Flujo"},{"location":"00_Algoritmos/#algoritmos-y-diagramas-de-flujo","text":"","title":"Algoritmos y Diagramas de Flujo"},{"location":"00_Algoritmos/#definiciones","text":"","title":"Definiciones"},{"location":"00_Algoritmos/#algoritmo","text":"Algoritmo Es una secuencia de pasos finitos y ordenados, para resolver un problema.","title":"Algoritmo"},{"location":"00_Algoritmos/#ejemplos","text":"Receta de cocina Un Manual Un set de instrucciones Un procedimiento Un protocolo Una secuencia Un plan Una estrategia","title":"Ejemplos"},{"location":"00_Algoritmos/#diagrama-de-flujo","text":"Diagrama de Flujo Es una representaci\u00f3n gr\u00e1fica de un algoritmo.","title":"Diagrama de flujo"},{"location":"00_Algoritmos/#pseudocodigo","text":"Es una manera de expresar un algoritmo de manera natural, muy cercano a una receta de cocina o unas simples instrucciones. Ejemplo: Escribir el mensaje en pantalla \"Ingrese el primer numero:\" Almacenar en la variable A el valor dado por el usuario Escribir el mensaje en pantalla \"Ingrese el segundo numero:\" Almacenar en la variable B el valor dado por el usuario Sumo la variable A y B, lo almaceno en la variable C Escribir en la pantalla el mensaje \"El resultado es: \", junto al contenido de la variable C","title":"Pseudoc\u00f3digo"},{"location":"01_simbolos/","text":"Simbolog\u00eda de Diagramas de flujos Dentro de los diagramas de flujo existe una variedad de simbolog\u00eda, sin embargo, aqu\u00ed solo estaremos viendo la simbolog\u00eda b\u00e1sica. Nombre S\u00edmbolo Pseudoc\u00f3digo Inicio/Fin Inicio / Fin Proceso, Operaci\u00f3n o Acci\u00f3n - Entrada/Salida de datos Leer / Imprimir Decisi\u00f3n - Display Imprimir Documento Imprimir L\u00edneas de flujo - Conector en misma p\u00e1gina - Conector a otro p\u00e1gina - Ejemplo de Diagrama de flujo Aqu\u00ed se muestra un diagrama de flujo que realiza el c\u00e1lculo del area de un tri\u00e1ngulo. Ejemplo de un diagrama de flujo que calcula el area de un tri\u00e1ngulo","title":"Simbolog\u00eda de Diagramas de flujos"},{"location":"01_simbolos/#simbologia-de-diagramas-de-flujos","text":"Dentro de los diagramas de flujo existe una variedad de simbolog\u00eda, sin embargo, aqu\u00ed solo estaremos viendo la simbolog\u00eda b\u00e1sica. Nombre S\u00edmbolo Pseudoc\u00f3digo Inicio/Fin Inicio / Fin Proceso, Operaci\u00f3n o Acci\u00f3n - Entrada/Salida de datos Leer / Imprimir Decisi\u00f3n - Display Imprimir Documento Imprimir L\u00edneas de flujo - Conector en misma p\u00e1gina - Conector a otro p\u00e1gina -","title":"Simbolog\u00eda de Diagramas de flujos"},{"location":"01_simbolos/#ejemplo-de-diagrama-de-flujo","text":"Aqu\u00ed se muestra un diagrama de flujo que realiza el c\u00e1lculo del area de un tri\u00e1ngulo. Ejemplo de un diagrama de flujo que calcula el area de un tri\u00e1ngulo","title":"Ejemplo de Diagrama de flujo"},{"location":"02_Estructura_de_un_diagrama_de_flujo/","text":"Estructura de un diagrama de flujo Se describe a continuaci\u00f3n el proceso de la creaci\u00f3n de un diagrama de flujo Posteriormente se coloca el s\u00edmbolo que necesites, dependiendo de lo que que deba realizar el algoritmo, normalmente se coloca un proceso, una impresi\u00f3n, adquisici\u00f3n de datos o rara vez una decision. Despu\u00e9s de haber realizado y resolver el problema solicitado, se debe colocar el s\u00edmbolo de \"FIN\", con ello indicamos que el algoritmo termina, si lo que debe resolver es infinito; es decir, nunca termina no llevara este s\u00edmbolo Resumen Todo diagrama de flujo comienza con su s\u00edmbolo de INICIO Despu\u00e9s se realizan todas las operaciones necesarias Al final de todo diagrama lleva su FIN , excepto cuando el algoritmo queda en un ciclo infinito","title":"Estructura de un diagrama de flujo"},{"location":"02_Estructura_de_un_diagrama_de_flujo/#estructura-de-un-diagrama-de-flujo","text":"Se describe a continuaci\u00f3n el proceso de la creaci\u00f3n de un diagrama de flujo Posteriormente se coloca el s\u00edmbolo que necesites, dependiendo de lo que que deba realizar el algoritmo, normalmente se coloca un proceso, una impresi\u00f3n, adquisici\u00f3n de datos o rara vez una decision. Despu\u00e9s de haber realizado y resolver el problema solicitado, se debe colocar el s\u00edmbolo de \"FIN\", con ello indicamos que el algoritmo termina, si lo que debe resolver es infinito; es decir, nunca termina no llevara este s\u00edmbolo","title":"Estructura de un diagrama de flujo"},{"location":"02_Estructura_de_un_diagrama_de_flujo/#resumen","text":"Todo diagrama de flujo comienza con su s\u00edmbolo de INICIO Despu\u00e9s se realizan todas las operaciones necesarias Al final de todo diagrama lleva su FIN , excepto cuando el algoritmo queda en un ciclo infinito","title":"Resumen"},{"location":"03_Variables/","text":"Variables Que es una variable? Una variable desde el punto de vista computacional, es un espacio en memoria. Desde el punto de vista matem\u00e1tico es un referencia o un nombre para un valor que desconocemos y puede tomar cualquier valor. Entonces, que es al final, es una combinaci\u00f3n de ambas definiciones, es un espacio en memoria que puede almacenar un dato o datos, dependiendo del tipo de variable o el tama\u00f1o de la variable. Es un espacio virtual el cual quedar\u00e1 registrado en la memoria; el cual se podr\u00e1 llamar en diferentes puntos de la programaci\u00f3n cuantas veces la necesitemos. A este espacio se le da un nombre que nos indique para qu\u00e9 ha sido creada. Las variables pueden tomar cualquier tipo de valor Variables edad = 20 // Variable que almacena un numero , la edad nombre = \"Diana\" // Variable que almacena un nombre ( String ) nombre = \"Aprendiendo programaci\u00f3n\" // Variable que almacena una frase ( String ) isAlive = true // Variable que almacena un valor booleano Qu\u00e9 es declarar una variable? La declaraci\u00f3n de una variable es reservar un espacio en memoria de la computadora . La computadora tiene cierta cantidad de memoria, la cual es repartida entre todos los programas y los propios procesos para ejecutar el sistema operativo. Cuando ejecutamos un programa, \u00e9ste comienza reservar memoria para poder trabajar. Entonces, al declarar variables estamos consumiendo memoria, la cual vamos a utilizar en alg\u00fan momento, si estamos reservando el espacio significa que en alg\u00fan otro momento necesitamos recuperar lo que hemos guardado para realizar otra operaci\u00f3n, de lo contrario no necesitamos reservar memoria si el valor solo ser\u00e1 utilizado una \u00fanica vez. C\u00f3mo nombrar una variable? Dentro de la programaci\u00f3n existen buenas practicas para declarar variables. Estas reglas se definen a lo largo del tiempo que ha evolucionado. Estas son las reglas gen\u00e9ricas para (casi) todos lenguajes. Deben comenzar en min\u00fascula Se escriben en min\u00fasculas, las variantes se dan cuando son m\u00e1s de dos palabras. Solo puede contener n\u00fameros al final. Sensibles a min\u00fasculas y may\u00fasculas; es decir, si declaro una variable llamada variable1 y otra llamada Variable1 , para la computadora son variables o espacios de memoria distintos, aun que suenen igual, con el solo hecho de cambiar una letra, ya estamos hablando de una variable distinta. No pueden contener espacios entre letras o palabras No puede comenzar con n\u00fameros o s\u00edmbolos No puede contener caracteres especiales, todos son caracteres especiales menos el abecedario ingles. Ejemplo: !\"\u00b7%&-+/()=?\u00bf... , los \u00fanicos s\u00edmbolos permitidos son $ y _ . El nombre debe ser descriptivo ; es decir, con solo leerlo podemos deducir qu\u00e9 hace o para qu\u00e9 fue declarada (Regla especial): Todo de escribe en ingles. (Regla especial) : Si se desea escribir una variable combinando dos palabras o m\u00e1s, se separar\u00e1n con un gui\u00f3n bajo, se aplica la convenci\u00f3n CamelCase , es decir, en lugar de usar el espacio la palabra debe continuar con letra may\u00fascula. Ejemplos: valor valor1 valorUno variableNueva Las convenciones de Camel Case y Snake Case no las menciona por el momento, porque aplican en funci\u00f3n de un lenguaje en concreto, hasta el momento esto aplicar\u00e1 para diagramas de flujo, lo cual es algo gen\u00e9rico y base. Facebook Mecatr\u00f3nica 85 Realizado por Alejandro Leyva","title":"Variables"},{"location":"03_Variables/#variables","text":"","title":"Variables"},{"location":"03_Variables/#que-es-una-variable","text":"Una variable desde el punto de vista computacional, es un espacio en memoria. Desde el punto de vista matem\u00e1tico es un referencia o un nombre para un valor que desconocemos y puede tomar cualquier valor. Entonces, que es al final, es una combinaci\u00f3n de ambas definiciones, es un espacio en memoria que puede almacenar un dato o datos, dependiendo del tipo de variable o el tama\u00f1o de la variable. Es un espacio virtual el cual quedar\u00e1 registrado en la memoria; el cual se podr\u00e1 llamar en diferentes puntos de la programaci\u00f3n cuantas veces la necesitemos. A este espacio se le da un nombre que nos indique para qu\u00e9 ha sido creada. Las variables pueden tomar cualquier tipo de valor Variables edad = 20 // Variable que almacena un numero , la edad nombre = \"Diana\" // Variable que almacena un nombre ( String ) nombre = \"Aprendiendo programaci\u00f3n\" // Variable que almacena una frase ( String ) isAlive = true // Variable que almacena un valor booleano","title":"Que es una variable?"},{"location":"03_Variables/#que-es-declarar-una-variable","text":"La declaraci\u00f3n de una variable es reservar un espacio en memoria de la computadora . La computadora tiene cierta cantidad de memoria, la cual es repartida entre todos los programas y los propios procesos para ejecutar el sistema operativo. Cuando ejecutamos un programa, \u00e9ste comienza reservar memoria para poder trabajar. Entonces, al declarar variables estamos consumiendo memoria, la cual vamos a utilizar en alg\u00fan momento, si estamos reservando el espacio significa que en alg\u00fan otro momento necesitamos recuperar lo que hemos guardado para realizar otra operaci\u00f3n, de lo contrario no necesitamos reservar memoria si el valor solo ser\u00e1 utilizado una \u00fanica vez.","title":"Qu\u00e9 es declarar una variable?"},{"location":"03_Variables/#como-nombrar-una-variable","text":"Dentro de la programaci\u00f3n existen buenas practicas para declarar variables. Estas reglas se definen a lo largo del tiempo que ha evolucionado. Estas son las reglas gen\u00e9ricas para (casi) todos lenguajes. Deben comenzar en min\u00fascula Se escriben en min\u00fasculas, las variantes se dan cuando son m\u00e1s de dos palabras. Solo puede contener n\u00fameros al final. Sensibles a min\u00fasculas y may\u00fasculas; es decir, si declaro una variable llamada variable1 y otra llamada Variable1 , para la computadora son variables o espacios de memoria distintos, aun que suenen igual, con el solo hecho de cambiar una letra, ya estamos hablando de una variable distinta. No pueden contener espacios entre letras o palabras No puede comenzar con n\u00fameros o s\u00edmbolos No puede contener caracteres especiales, todos son caracteres especiales menos el abecedario ingles. Ejemplo: !\"\u00b7%&-+/()=?\u00bf... , los \u00fanicos s\u00edmbolos permitidos son $ y _ . El nombre debe ser descriptivo ; es decir, con solo leerlo podemos deducir qu\u00e9 hace o para qu\u00e9 fue declarada (Regla especial): Todo de escribe en ingles. (Regla especial) : Si se desea escribir una variable combinando dos palabras o m\u00e1s, se separar\u00e1n con un gui\u00f3n bajo, se aplica la convenci\u00f3n CamelCase , es decir, en lugar de usar el espacio la palabra debe continuar con letra may\u00fascula. Ejemplos: valor valor1 valorUno variableNueva Las convenciones de Camel Case y Snake Case no las menciona por el momento, porque aplican en funci\u00f3n de un lenguaje en concreto, hasta el momento esto aplicar\u00e1 para diagramas de flujo, lo cual es algo gen\u00e9rico y base. Facebook Mecatr\u00f3nica 85 Realizado por Alejandro Leyva","title":"C\u00f3mo nombrar una variable?"},{"location":"04_tipos_datos/","text":"Tipos de datos","title":"Tipos de datos"},{"location":"04_tipos_datos/#tipos-de-datos","text":"","title":"Tipos de datos"},{"location":"05_Introduccion_diagramas/","text":"Introducci\u00f3n a creaci\u00f3n de Diagramas de flujo Aqu\u00ed comenzaremos a construir diagramas de flujo b\u00e1sicos. Construidos parte por parte. Ejemplo 1. Se debe realizar un diagrama de flujo que sume 2 n\u00fameros enteros, estos n\u00fameros deben estar almacenados en memoria; es decir, en variables. El resultado enviarlo a la pantalla. Con base a las instrucciones, entendemos que los valores pueden ser cuales quiera, deben estar almacenados en el programa. Primero debemos comenzar con el s\u00edmbolo de INICIO Tomando las instrucciones nos dice que debemos tomar definir un valor, el que nosotros querramos, en memoria para sumarlo con otro, por lo tanto, aplicamos un proceso declarando la primera variable variable1 y le asignamos un valor; en esta caso le asignamos el valor de 10 . El s\u00edmbolo de Proceso (Rect\u00e1ngulo) se usa para realizar una operaci\u00f3n matem\u00e1tica, asignaci\u00f3n de valor a una variable o declaraci\u00f3n de una variable. Se utiliza el signo de igual (=) para asignaci\u00f3n de un valor a una variable. Ahora debemos declarar otro variable, en este caso la llamaremos valor2 , recordemos que el nombre de la variable es el que escojamos. En una secci\u00f3n previa se indican las reglas para declaraci\u00f3n de variables . A nuestra variable variable2 le asignamos el valor de 5 . Como estamos realizando una asignaci\u00f3n de un valor a una variable, utilizamos el s\u00edmbolo de Proceso (Rect\u00e1ngulo). Acto seguido es realizar la operaci\u00f3n aritm\u00e9tica de suma. Para ello esto lo realizamos en un Proceso y lo guardamos en una variable llamada suma . Ya que tenemos el resultado guardado en la variable suma , lo mandaremos a la pantalla (Display). Hemos terminado de realizar lo solicitado, por lo tanto, debemos terminar nuestro diagrama de flujo, con el s\u00edmbolo de FIN Ejemplo 2. Realizar la suma de dos n\u00fameros enteros, solicit\u00e1ndolos al usuario y al final imprimir por pantalla el resultado. Con base a las instrucciones debemos solicitar al usuario los n\u00fameros, pero primero le tenemos que indicar que debe hacer, y debemos guardar este valor en una variable cada uno para poder realizar la operaci\u00f3n correspondiente. Como todo diagrama de flujo comenzamos con el s\u00edmbolo de INICIO Tenemos que indicarle al usuario qu\u00e9 debe realizar, para realizar esto debemos utilizar el s\u00edmbolo para enviar mensajes a la pantalla con el mensaje. Los textos que queremos que se muestre debe ir entre dobles comillas \" \" . El mensaje que mostraremos es \"Dar el primer numero entero\" Ahora debemos recibir el dato que el usuario quiere ingresar, este numero lo debemos guardar en alg\u00fan lado, por lo tanto, declaramos una variable dentro del s\u00edmbolo que es para ingresar datos. La variable la llamamos variable1 Ya que tenemos el primer valor, debemos solicitar al segundo valor, para ello debemos mandar el segundo mensaje indic\u00e1ndole al usuario qu\u00e9 debe realizar, el mensaje ser\u00e1 \"Dar el segundo numero entero\" dentro del s\u00edmbolo de Display Debemos recibir el siguiente valor y almacenarlo en otra variable, la llamaremos valor2 , para poder ingresar el valor a esta variable tenemos que ocupar el s\u00edmbolo de entrada de datos. Contamos con los valores que ingreso el usuario en las variables valor1 y valor2 , ahora debemos realizar la operaci\u00f3n y la guardaremos en la variable suma . El resultado de la operaci\u00f3n esta almacenada en la variable suma , la debemos env\u00edar a la pantalla, tenemos que usar el s\u00edmbolo de Display , la variable Hemos terminado lo que nos fue solicitado, por lo tanto, solo nos queda finalizar el diagrama de flujo con FIN","title":"Introducci\u00f3n a creaci\u00f3n de Diagramas de flujo"},{"location":"05_Introduccion_diagramas/#introduccion-a-creacion-de-diagramas-de-flujo","text":"Aqu\u00ed comenzaremos a construir diagramas de flujo b\u00e1sicos. Construidos parte por parte. Ejemplo 1. Se debe realizar un diagrama de flujo que sume 2 n\u00fameros enteros, estos n\u00fameros deben estar almacenados en memoria; es decir, en variables. El resultado enviarlo a la pantalla. Con base a las instrucciones, entendemos que los valores pueden ser cuales quiera, deben estar almacenados en el programa. Primero debemos comenzar con el s\u00edmbolo de INICIO Tomando las instrucciones nos dice que debemos tomar definir un valor, el que nosotros querramos, en memoria para sumarlo con otro, por lo tanto, aplicamos un proceso declarando la primera variable variable1 y le asignamos un valor; en esta caso le asignamos el valor de 10 . El s\u00edmbolo de Proceso (Rect\u00e1ngulo) se usa para realizar una operaci\u00f3n matem\u00e1tica, asignaci\u00f3n de valor a una variable o declaraci\u00f3n de una variable. Se utiliza el signo de igual (=) para asignaci\u00f3n de un valor a una variable. Ahora debemos declarar otro variable, en este caso la llamaremos valor2 , recordemos que el nombre de la variable es el que escojamos. En una secci\u00f3n previa se indican las reglas para declaraci\u00f3n de variables . A nuestra variable variable2 le asignamos el valor de 5 . Como estamos realizando una asignaci\u00f3n de un valor a una variable, utilizamos el s\u00edmbolo de Proceso (Rect\u00e1ngulo). Acto seguido es realizar la operaci\u00f3n aritm\u00e9tica de suma. Para ello esto lo realizamos en un Proceso y lo guardamos en una variable llamada suma . Ya que tenemos el resultado guardado en la variable suma , lo mandaremos a la pantalla (Display). Hemos terminado de realizar lo solicitado, por lo tanto, debemos terminar nuestro diagrama de flujo, con el s\u00edmbolo de FIN Ejemplo 2. Realizar la suma de dos n\u00fameros enteros, solicit\u00e1ndolos al usuario y al final imprimir por pantalla el resultado. Con base a las instrucciones debemos solicitar al usuario los n\u00fameros, pero primero le tenemos que indicar que debe hacer, y debemos guardar este valor en una variable cada uno para poder realizar la operaci\u00f3n correspondiente. Como todo diagrama de flujo comenzamos con el s\u00edmbolo de INICIO Tenemos que indicarle al usuario qu\u00e9 debe realizar, para realizar esto debemos utilizar el s\u00edmbolo para enviar mensajes a la pantalla con el mensaje. Los textos que queremos que se muestre debe ir entre dobles comillas \" \" . El mensaje que mostraremos es \"Dar el primer numero entero\" Ahora debemos recibir el dato que el usuario quiere ingresar, este numero lo debemos guardar en alg\u00fan lado, por lo tanto, declaramos una variable dentro del s\u00edmbolo que es para ingresar datos. La variable la llamamos variable1 Ya que tenemos el primer valor, debemos solicitar al segundo valor, para ello debemos mandar el segundo mensaje indic\u00e1ndole al usuario qu\u00e9 debe realizar, el mensaje ser\u00e1 \"Dar el segundo numero entero\" dentro del s\u00edmbolo de Display Debemos recibir el siguiente valor y almacenarlo en otra variable, la llamaremos valor2 , para poder ingresar el valor a esta variable tenemos que ocupar el s\u00edmbolo de entrada de datos. Contamos con los valores que ingreso el usuario en las variables valor1 y valor2 , ahora debemos realizar la operaci\u00f3n y la guardaremos en la variable suma . El resultado de la operaci\u00f3n esta almacenada en la variable suma , la debemos env\u00edar a la pantalla, tenemos que usar el s\u00edmbolo de Display , la variable Hemos terminado lo que nos fue solicitado, por lo tanto, solo nos queda finalizar el diagrama de flujo con FIN","title":"Introducci\u00f3n a creaci\u00f3n de Diagramas de flujo"},{"location":"06_Operadores_aritmeticos/","text":"Operadores aritm\u00e9ticos En esta secci\u00f3n veremos los operadores aritm\u00e9ticos b\u00e1sicos que podemos encontrar en la mayoria de lenguajes. Nombre S\u00edmbolo Descripci\u00f3n Suma + Realiza la operaci\u00f3n de suma aritm\u00e9tica Resta - Realiza la operaci\u00f3n de resta aritm\u00e9tica Multiplicaci\u00f3n * Realiza la operaci\u00f3n de multiplicaci\u00f3n aritm\u00e9tica Divisi\u00f3n / Realiza la operaci\u00f3n de raz\u00f3n aritm\u00e9tica Residuo o M\u00f3dulo % Realiza la operaci\u00f3n de divisi\u00f3n aritm\u00e9tica y devuelve el residuo de \u00e9sta divisi\u00f3n Cuando somos nuevos en el mundo de la programaci\u00f3n queremos aplicar conocimiento que tenemos con relaci\u00f3n a matem\u00e1ticas, aqu\u00ed existen algunas cuestiones que no se aplican de la misma manera o solo se puede aplicar de cierta forma. Precauciones que debemos tener en cuenta son: El \u00fanico s\u00edmbolo que podemos ocupar para la divisi\u00f3n es la diagonal o slash (/), no existe otro s\u00edmbolo ni tampoco se puede ocupar los tradicionales que conocemos. El \u00fanico s\u00edmbolo para multiplicaci\u00f3n es el asterisco (*), no existe algun otro ni ninguno m\u00e1s sirve para multiplicar. Los par\u00e9ntesis \"( )\" solo agrupan y nada mas. No sirven para multiplicar . Ejemplos: 1. Realizar la multiplicaci\u00f3n de dos numeros que ingrese el usuario e imprimir el resultado por pantalla Como ya sabemos debemos comenzar con nuestro s\u00edmbolo de INICIO , posteriormente debemos mandar un mensaje a la pantalla indicandole al usuario lo que debe realizar. El mensaje ser\u00e1 \"Dar el primer valor a multiplicar\" Despu\u00e9s de mandar el mensaje, debemos recibir y almacenar ese valor. Por lo tanto, usamos el s\u00edmbolo de ingreso de datos y lo tenemos que almacenar en una variable. Esta variable la llamaremos numero1 . Una vez que ya tenemos el primer valor almacenado en memoria, vamos a mandar otro mensaje indic\u00e1ndole al usuario qu\u00e9 debe realizar. El mensaje ser\u00e1 \"Dar el segundo valor a multiplciar\" Siguiente paso es almacenar el dato que el usuario ingresar\u00e1; lo guardaremos en una variable llamada numero2 . Ahora que ya tenemos los valores que ingreso el usuario en las variables numero1 y numero2 , debemos realizar la operaci\u00f3n matem\u00e1ticas, en el s\u00edmbolo de proceso u operaci\u00f3n , este resultado guardarlo en la variable resultado . Una vez ya tenemos el resultado de la operaci\u00f3n dentro de la variable resultado , solo nos quedo enviarlo a la pantalla y que el usuario conozco el resultado. Hemos terminado todas las acciones que ibas a realizar, solo nos queda terminar con el s\u00edmbolo de FIN , con esto indicamos que el diagrama de flujo ha terminado su tarea. Precedencia de operadores La precedencia de operadores funciona pr\u00e1cticamente igual que en matem\u00e1ticas. Recordemos que solo existen 5 operaciones aritm\u00e9ticas b\u00e1sicas en la programaci\u00f3n ( Nota: En concreto por lenguaje puede variar ). Orden Operaci\u00f3n S\u00edmbolo Descripci\u00f3n 1 Agrupaci\u00f3n ( ) Los par\u00e9ntesis solo realizan la operaci\u00f3n de agrupar (no operaci\u00f3n aritm\u00e9tica), la operaci\u00f3n que esta en los par\u00e9ntesis mas profundos son las primeras que se realizan 2 Residuo % Obtiene el residuo de una divisi\u00f3n 3 Divisi\u00f3n / Realiza una divisi\u00f3n aritm\u00e9tica 4 Multiplicaci\u00f3n * Realiza una multiplicaci\u00f3n aritm\u00e9tica 5 Suma + Realiza una suma aritm\u00e9tica 6 Resta - Realiza una resta aritm\u00e9tica Vamos a hacer una comparativa en la forma matem\u00e1ticas convencional y como se realiza en diagramas de flujo o programaci\u00f3n (esto aplica pr\u00e1cticamente a cualquier lenguaje) Ejemplos matem\u00e1ticas Programaci\u00f3n \\(4+3\\) 4 + 3 \\(10-3\\) 10 - 3 \\(5\\times 5\\) 5 * 5 \\(\\frac{3}{2}\\) 2 / 3 \\(\\frac{2 + 4}{6}\\) ( 2 + 4 ) / 6 \\(2 + \\frac{4}{3}\\) 2 + ( 4 / 3 ) \\(\\frac{x+y+z}{w}\\) ( x + y + z ) / w \\(x ^2\\) x * x Ejercicios Transformar las siguientes expresiones matem\u00e1ticas a una representaci\u00f3n de diagrama de flujo. matem\u00e1ticas Programaci\u00f3n \\(x + y\\) \\(\\frac{4 - 2}{5}\\) \\(3 + \\frac{4}{8}\\) \\(6 + 4 \\times \\frac{3}{9}\\) \\(\\frac{3}{7} + \\frac{8}{3}\\)","title":"Operadores aritm\u00e9ticos"},{"location":"06_Operadores_aritmeticos/#operadores-aritmeticos","text":"En esta secci\u00f3n veremos los operadores aritm\u00e9ticos b\u00e1sicos que podemos encontrar en la mayoria de lenguajes. Nombre S\u00edmbolo Descripci\u00f3n Suma + Realiza la operaci\u00f3n de suma aritm\u00e9tica Resta - Realiza la operaci\u00f3n de resta aritm\u00e9tica Multiplicaci\u00f3n * Realiza la operaci\u00f3n de multiplicaci\u00f3n aritm\u00e9tica Divisi\u00f3n / Realiza la operaci\u00f3n de raz\u00f3n aritm\u00e9tica Residuo o M\u00f3dulo % Realiza la operaci\u00f3n de divisi\u00f3n aritm\u00e9tica y devuelve el residuo de \u00e9sta divisi\u00f3n Cuando somos nuevos en el mundo de la programaci\u00f3n queremos aplicar conocimiento que tenemos con relaci\u00f3n a matem\u00e1ticas, aqu\u00ed existen algunas cuestiones que no se aplican de la misma manera o solo se puede aplicar de cierta forma. Precauciones que debemos tener en cuenta son: El \u00fanico s\u00edmbolo que podemos ocupar para la divisi\u00f3n es la diagonal o slash (/), no existe otro s\u00edmbolo ni tampoco se puede ocupar los tradicionales que conocemos. El \u00fanico s\u00edmbolo para multiplicaci\u00f3n es el asterisco (*), no existe algun otro ni ninguno m\u00e1s sirve para multiplicar. Los par\u00e9ntesis \"( )\" solo agrupan y nada mas. No sirven para multiplicar .","title":"Operadores aritm\u00e9ticos"},{"location":"06_Operadores_aritmeticos/#ejemplos","text":"1. Realizar la multiplicaci\u00f3n de dos numeros que ingrese el usuario e imprimir el resultado por pantalla Como ya sabemos debemos comenzar con nuestro s\u00edmbolo de INICIO , posteriormente debemos mandar un mensaje a la pantalla indicandole al usuario lo que debe realizar. El mensaje ser\u00e1 \"Dar el primer valor a multiplicar\" Despu\u00e9s de mandar el mensaje, debemos recibir y almacenar ese valor. Por lo tanto, usamos el s\u00edmbolo de ingreso de datos y lo tenemos que almacenar en una variable. Esta variable la llamaremos numero1 . Una vez que ya tenemos el primer valor almacenado en memoria, vamos a mandar otro mensaje indic\u00e1ndole al usuario qu\u00e9 debe realizar. El mensaje ser\u00e1 \"Dar el segundo valor a multiplciar\" Siguiente paso es almacenar el dato que el usuario ingresar\u00e1; lo guardaremos en una variable llamada numero2 . Ahora que ya tenemos los valores que ingreso el usuario en las variables numero1 y numero2 , debemos realizar la operaci\u00f3n matem\u00e1ticas, en el s\u00edmbolo de proceso u operaci\u00f3n , este resultado guardarlo en la variable resultado . Una vez ya tenemos el resultado de la operaci\u00f3n dentro de la variable resultado , solo nos quedo enviarlo a la pantalla y que el usuario conozco el resultado. Hemos terminado todas las acciones que ibas a realizar, solo nos queda terminar con el s\u00edmbolo de FIN , con esto indicamos que el diagrama de flujo ha terminado su tarea.","title":"Ejemplos:"},{"location":"06_Operadores_aritmeticos/#precedencia-de-operadores","text":"La precedencia de operadores funciona pr\u00e1cticamente igual que en matem\u00e1ticas. Recordemos que solo existen 5 operaciones aritm\u00e9ticas b\u00e1sicas en la programaci\u00f3n ( Nota: En concreto por lenguaje puede variar ). Orden Operaci\u00f3n S\u00edmbolo Descripci\u00f3n 1 Agrupaci\u00f3n ( ) Los par\u00e9ntesis solo realizan la operaci\u00f3n de agrupar (no operaci\u00f3n aritm\u00e9tica), la operaci\u00f3n que esta en los par\u00e9ntesis mas profundos son las primeras que se realizan 2 Residuo % Obtiene el residuo de una divisi\u00f3n 3 Divisi\u00f3n / Realiza una divisi\u00f3n aritm\u00e9tica 4 Multiplicaci\u00f3n * Realiza una multiplicaci\u00f3n aritm\u00e9tica 5 Suma + Realiza una suma aritm\u00e9tica 6 Resta - Realiza una resta aritm\u00e9tica Vamos a hacer una comparativa en la forma matem\u00e1ticas convencional y como se realiza en diagramas de flujo o programaci\u00f3n (esto aplica pr\u00e1cticamente a cualquier lenguaje)","title":"Precedencia de operadores"},{"location":"06_Operadores_aritmeticos/#ejemplos_1","text":"matem\u00e1ticas Programaci\u00f3n \\(4+3\\) 4 + 3 \\(10-3\\) 10 - 3 \\(5\\times 5\\) 5 * 5 \\(\\frac{3}{2}\\) 2 / 3 \\(\\frac{2 + 4}{6}\\) ( 2 + 4 ) / 6 \\(2 + \\frac{4}{3}\\) 2 + ( 4 / 3 ) \\(\\frac{x+y+z}{w}\\) ( x + y + z ) / w \\(x ^2\\) x * x","title":"Ejemplos"},{"location":"06_Operadores_aritmeticos/#ejercicios","text":"Transformar las siguientes expresiones matem\u00e1ticas a una representaci\u00f3n de diagrama de flujo. matem\u00e1ticas Programaci\u00f3n \\(x + y\\) \\(\\frac{4 - 2}{5}\\) \\(3 + \\frac{4}{8}\\) \\(6 + 4 \\times \\frac{3}{9}\\) \\(\\frac{3}{7} + \\frac{8}{3}\\)","title":"Ejercicios"},{"location":"07_entradas_salidas/","text":"Entradas y salidas Dentro de todo algoritmo tendremos salidas y entrada de datos, en este caso el ingresar informaci\u00f3n es correspondiente a un numero, letra o conjunto de caracteres (String). Para mandar el resultado de lo que estemos realizando tendremos que usar una salida. Entrada (Input) La entrada de datos o de informaci\u00f3n lo haremos con los s\u00edmbolos siguiente: S\u00edmbolo Nombre Entrada/Salida (Tiene 2 funciones) Salida (Output) La salida de informaci\u00f3n es muy variada, dado que el contexto de la aplicaci\u00f3n o el algoritmo puede tomar una u otro. Lo que nos ata\u00f1e es que al final sigue siendo una salida de informaci\u00f3n por alg\u00fan medio ya sea f\u00edsico o digital. S\u00edmbolo Nombre Salida a pantalla (Display) Entrada/Salida (Tiene 2 funciones) Salida a documento (impresi\u00f3n en hoja)","title":"Entradas y salidas"},{"location":"07_entradas_salidas/#entradas-y-salidas","text":"Dentro de todo algoritmo tendremos salidas y entrada de datos, en este caso el ingresar informaci\u00f3n es correspondiente a un numero, letra o conjunto de caracteres (String). Para mandar el resultado de lo que estemos realizando tendremos que usar una salida.","title":"Entradas y salidas"},{"location":"07_entradas_salidas/#entrada-input","text":"La entrada de datos o de informaci\u00f3n lo haremos con los s\u00edmbolos siguiente: S\u00edmbolo Nombre Entrada/Salida (Tiene 2 funciones)","title":"Entrada (Input)"},{"location":"07_entradas_salidas/#salida-output","text":"La salida de informaci\u00f3n es muy variada, dado que el contexto de la aplicaci\u00f3n o el algoritmo puede tomar una u otro. Lo que nos ata\u00f1e es que al final sigue siendo una salida de informaci\u00f3n por alg\u00fan medio ya sea f\u00edsico o digital. S\u00edmbolo Nombre Salida a pantalla (Display) Entrada/Salida (Tiene 2 funciones) Salida a documento (impresi\u00f3n en hoja)","title":"Salida (Output)"},{"location":"08_decisiones_if/","text":"Comparaciones o Decisiones (if) Una comparaci\u00f3n me ayuda a poder cambiar una ruta o indicar hacer otra tarea con base a una comparaci\u00f3n, con ello podemos hacer mas diverso y variante nuestro algoritmo, puesto no todo es est\u00e1tico y podemos hacer nuestro programa din\u00e1mico. Dentro de una comparaci\u00f3n se realiza una pregunta, la cual las \u00fanicas respuestas puede ser si o no , no existe otra respuesta ; por lo tanto, debemos pensar como sera la pregunta para obtener la respuesta que necesitamos y con ello moderar el flujo o el avance del algoritmo. Decision b\u00e1sica Las preguntas pueden estar anidadas, es decir, pueden ser consecutivas hasta que alguna coincida, no es necesario que coincida con alguna. Decisiones anidadas","title":"Comparaciones o Decisiones (if)"},{"location":"08_decisiones_if/#comparaciones-o-decisiones-if","text":"Una comparaci\u00f3n me ayuda a poder cambiar una ruta o indicar hacer otra tarea con base a una comparaci\u00f3n, con ello podemos hacer mas diverso y variante nuestro algoritmo, puesto no todo es est\u00e1tico y podemos hacer nuestro programa din\u00e1mico. Dentro de una comparaci\u00f3n se realiza una pregunta, la cual las \u00fanicas respuestas puede ser si o no , no existe otra respuesta ; por lo tanto, debemos pensar como sera la pregunta para obtener la respuesta que necesitamos y con ello moderar el flujo o el avance del algoritmo. Decision b\u00e1sica Las preguntas pueden estar anidadas, es decir, pueden ser consecutivas hasta que alguna coincida, no es necesario que coincida con alguna. Decisiones anidadas","title":"Comparaciones o Decisiones (if)"},{"location":"09_operadores_comparacion/","text":"Operadores de comparaci\u00f3n o relaci\u00f3n o para decisi\u00f3n Los operadores de relaci\u00f3n te dan unicamente dos respuesta ( l\u00f3gicas ) si o no , que son equivalentes a true o false (booleano), uno o cero , 1 o 0 (digitales), 0V o 5V (voltaje)respectivamente. Nombre Matem\u00e1ticas Algoritmos (Programaci\u00f3n) Menor que < < Menor o igual que \u2264 <= Mayor que > > Mayor o igual que \u2265 >= Igual que = == Diferente que \u2260 != Nota: El diferente de puede variar por lenguaje Sintaxis de comparaci\u00f3n La forma en la que se escriben las comparaciones es: Izquierda Centro Derecha valor/variable operador valor/variable 5 == 8 a >= b 10 <= x a <= 2 Ejemplos de comparaci\u00f3n Las \u00fanicas comparaciones que se pueden realizar son entre n\u00fameros, con respecto a las letras o car\u00e1cter (\u00fanico), la comparaci\u00f3n es en su valor ASCII , en si los textos no se pueden comparar; sin embargo, aplicado a un lenguaje en concreto esto puede variar. Comparaci\u00f3n Resultado 5 > 8 no 10 > 8 si 20 > 5 no 8 >= 8 si 6 < 8 si 2 <= 8 si 0 == 8 no 1 != -8 si Las comparaciones pueden ser entre variables, obviamente dicha variable debe contener un valor previamente. En este caso las variables tienen este valor: a = 5 b = 2 Comparaci\u00f3n Resultado a > b si a >= b si a < b no a <= b no a == b no a != b si Ejemplos Ejemplo 1 Preguntar al usuario su edad e imprimir si es mayor o menor de edad en funci\u00f3n de la edad. Pseudoc\u00f3digo Algoritmo MenorMayorEdad Imprimir \"Dar la edad\" Leer edad Si edad >= 18 Entonces Imprimir \"Eres mayor de edad\" FinSi Si edad < 18 Entonces Imprimir \"Aun eres menor de edad\" FinSi FinAlgoritmo Diagrama de Flujo Ejemplo 2 Solicitar un numero e indicar si es par o impar. Pseudoc\u00f3digo Algoritmo ParImpar Escribir 'Dar un numero para conocer si es par o impar' Leer numero Si numero % 2 == 0 Entonces Escribir 'El numero es par' FinSi Si numero % 2 != 0 Entonces Escribir 'El numero es impar' FinSi FinAlgoritmo Diagrama de flujo Ejemplo 3 Calculadora para obtener el \u00e1rea o el per\u00edmetro de un rect\u00e1ngulo, dependiendo del usuario Pseudoc\u00f3digo Algoritmo CalculadoraRectangulo Escribir 'Calculadora de Area o Perimetro del Rectangulo' Escribir '1) Area' Escribir '2) Perimetro' Leer option Si option == 1 Entonces Imprimir \"Dar el valor de la base\" Leer base Imprimir \"Dar el valor de la altura\" Leer altura area = base * altura Imprimir \"El area del rectangulo es \" , area FinSi Si option == 2 Entonces Imprimir \"Dar el valor de la base\" Leer base Imprimir \"Dar el valor de la altura\" Leer altura perimetro = ( 2 * base ) + ( 2 * altura ) Imprimir \"El perimetro del rectangulo es \" , perimetro FinSi FinAlgoritmo Diagrama de flujo Nota : No es la \u00fanica forma en la que se pueden realizar estos ejercicios, recuerda que lo importante es resolver el problema, que hayan mas o menos pasos, diferentes formulas, etc, no significa que este mal .","title":"Operadores de comparaci\u00f3n o relaci\u00f3n o para decisi\u00f3n"},{"location":"09_operadores_comparacion/#operadores-de-comparacion-o-relacion-o-para-decision","text":"Los operadores de relaci\u00f3n te dan unicamente dos respuesta ( l\u00f3gicas ) si o no , que son equivalentes a true o false (booleano), uno o cero , 1 o 0 (digitales), 0V o 5V (voltaje)respectivamente. Nombre Matem\u00e1ticas Algoritmos (Programaci\u00f3n) Menor que < < Menor o igual que \u2264 <= Mayor que > > Mayor o igual que \u2265 >= Igual que = == Diferente que \u2260 != Nota: El diferente de puede variar por lenguaje","title":"Operadores de comparaci\u00f3n o relaci\u00f3n o para decisi\u00f3n"},{"location":"09_operadores_comparacion/#sintaxis-de-comparacion","text":"La forma en la que se escriben las comparaciones es: Izquierda Centro Derecha valor/variable operador valor/variable 5 == 8 a >= b 10 <= x a <= 2","title":"Sintaxis de comparaci\u00f3n"},{"location":"09_operadores_comparacion/#ejemplos-de-comparacion","text":"Las \u00fanicas comparaciones que se pueden realizar son entre n\u00fameros, con respecto a las letras o car\u00e1cter (\u00fanico), la comparaci\u00f3n es en su valor ASCII , en si los textos no se pueden comparar; sin embargo, aplicado a un lenguaje en concreto esto puede variar. Comparaci\u00f3n Resultado 5 > 8 no 10 > 8 si 20 > 5 no 8 >= 8 si 6 < 8 si 2 <= 8 si 0 == 8 no 1 != -8 si Las comparaciones pueden ser entre variables, obviamente dicha variable debe contener un valor previamente. En este caso las variables tienen este valor: a = 5 b = 2 Comparaci\u00f3n Resultado a > b si a >= b si a < b no a <= b no a == b no a != b si","title":"Ejemplos de comparaci\u00f3n"},{"location":"09_operadores_comparacion/#ejemplos","text":"Ejemplo 1 Preguntar al usuario su edad e imprimir si es mayor o menor de edad en funci\u00f3n de la edad. Pseudoc\u00f3digo Algoritmo MenorMayorEdad Imprimir \"Dar la edad\" Leer edad Si edad >= 18 Entonces Imprimir \"Eres mayor de edad\" FinSi Si edad < 18 Entonces Imprimir \"Aun eres menor de edad\" FinSi FinAlgoritmo Diagrama de Flujo Ejemplo 2 Solicitar un numero e indicar si es par o impar. Pseudoc\u00f3digo Algoritmo ParImpar Escribir 'Dar un numero para conocer si es par o impar' Leer numero Si numero % 2 == 0 Entonces Escribir 'El numero es par' FinSi Si numero % 2 != 0 Entonces Escribir 'El numero es impar' FinSi FinAlgoritmo Diagrama de flujo Ejemplo 3 Calculadora para obtener el \u00e1rea o el per\u00edmetro de un rect\u00e1ngulo, dependiendo del usuario Pseudoc\u00f3digo Algoritmo CalculadoraRectangulo Escribir 'Calculadora de Area o Perimetro del Rectangulo' Escribir '1) Area' Escribir '2) Perimetro' Leer option Si option == 1 Entonces Imprimir \"Dar el valor de la base\" Leer base Imprimir \"Dar el valor de la altura\" Leer altura area = base * altura Imprimir \"El area del rectangulo es \" , area FinSi Si option == 2 Entonces Imprimir \"Dar el valor de la base\" Leer base Imprimir \"Dar el valor de la altura\" Leer altura perimetro = ( 2 * base ) + ( 2 * altura ) Imprimir \"El perimetro del rectangulo es \" , perimetro FinSi FinAlgoritmo Diagrama de flujo Nota : No es la \u00fanica forma en la que se pueden realizar estos ejercicios, recuerda que lo importante es resolver el problema, que hayan mas o menos pasos, diferentes formulas, etc, no significa que este mal .","title":"Ejemplos"},{"location":"10_decisiones_if_else/","text":"Comparaciones o Decisiones (if-else) Previamente ya vimos como se realiza una decision, pero ahora se complementa esta decision en un formato en el cual forzosamente si no se cumple la decision, es decir, si no es verdadera tiene que realizar alguna acci\u00f3n y posteriormente continuar. Otra manera de decirlo, es que tiene que realizar una acci\u00f3n, en cada caso antes de continuar con la siguiente acci\u00f3n . Decision b\u00e1sica Las preguntas pueden estar anidadas, es decir, despu\u00e9s de la pregunta puede haber otro estructura que tenga que realizar una de las dos acciones y posteriormente continuar. Decisiones anidadas Ejemplos Ejemplo 1 Preguntar al usuario su edad e imprimir si es mayor o menor de edad en funci\u00f3n de la edad. Pseudoc\u00f3digo Algoritmo MenorMayorEdad Imprimir \"Dar la edad\" Leer edad Si edad >= 18 Entonces Imprimir \"Eres mayor de edad\" Sino Imprimir \"Aun eres menor de edad\" FinSi FinAlgoritmo Diagrama de Flujo Ejemplo 2 Solicitar un numero e indicar si es par o impar. Pseudoc\u00f3digo Algoritmo ParImpar Escribir 'Dar un numero para conocer si es par o impar' Leer numero Si numero % 2 == 0 Entonces Escribir 'El numero es par' Sino Escribir 'El numero es impar' FinSi FinAlgoritmo Diagrama de flujo Ejemplo 3 Calculadora para obtener el \u00e1rea o el per\u00edmetro de un rect\u00e1ngulo, dependiendo del usuario, en caso de que de una opci\u00f3n que no existe mande un mensaje indicando \"Opci\u00f3n no posible\" Pseudoc\u00f3digo Algoritmo CalculadoraRectangulo Escribir 'Calculadora de Area o Perimetro del Rectangulo' Escribir '1) Area' Escribir '2) Perimetro' Leer option Si option == 1 Entonces Imprimir \"Dar el valor de la base\" Leer base Imprimir \"Dar el valor de la altura\" Leer altura area = base * altura Imprimir \"El area del rectangulo es \" , area Sino Si option == 2 Entonces Imprimir \"Dar el valor de la base\" Leer base Imprimir \"Dar el valor de la altura\" Leer altura perimetro = ( 2 * base ) + ( 2 * altura ) Imprimir \"El perimetro del rectangulo es \" , perimetro Sino Imprimir \"Opcion no posible\" FinSi FinSi FinAlgoritmo Diagrama de flujo Nota: No es la \u00fanica forma en la que se pueden realizar estos ejercicios, recuerda que lo importante es resolver el problema, que hayan mas o menos pasos, diferentes formulas, etc, no significa que este mal.","title":"Comparaciones o Decisiones (if-else)"},{"location":"10_decisiones_if_else/#comparaciones-o-decisiones-if-else","text":"Previamente ya vimos como se realiza una decision, pero ahora se complementa esta decision en un formato en el cual forzosamente si no se cumple la decision, es decir, si no es verdadera tiene que realizar alguna acci\u00f3n y posteriormente continuar. Otra manera de decirlo, es que tiene que realizar una acci\u00f3n, en cada caso antes de continuar con la siguiente acci\u00f3n . Decision b\u00e1sica Las preguntas pueden estar anidadas, es decir, despu\u00e9s de la pregunta puede haber otro estructura que tenga que realizar una de las dos acciones y posteriormente continuar. Decisiones anidadas","title":"Comparaciones o Decisiones (if-else)"},{"location":"10_decisiones_if_else/#ejemplos","text":"Ejemplo 1 Preguntar al usuario su edad e imprimir si es mayor o menor de edad en funci\u00f3n de la edad. Pseudoc\u00f3digo Algoritmo MenorMayorEdad Imprimir \"Dar la edad\" Leer edad Si edad >= 18 Entonces Imprimir \"Eres mayor de edad\" Sino Imprimir \"Aun eres menor de edad\" FinSi FinAlgoritmo Diagrama de Flujo Ejemplo 2 Solicitar un numero e indicar si es par o impar. Pseudoc\u00f3digo Algoritmo ParImpar Escribir 'Dar un numero para conocer si es par o impar' Leer numero Si numero % 2 == 0 Entonces Escribir 'El numero es par' Sino Escribir 'El numero es impar' FinSi FinAlgoritmo Diagrama de flujo Ejemplo 3 Calculadora para obtener el \u00e1rea o el per\u00edmetro de un rect\u00e1ngulo, dependiendo del usuario, en caso de que de una opci\u00f3n que no existe mande un mensaje indicando \"Opci\u00f3n no posible\" Pseudoc\u00f3digo Algoritmo CalculadoraRectangulo Escribir 'Calculadora de Area o Perimetro del Rectangulo' Escribir '1) Area' Escribir '2) Perimetro' Leer option Si option == 1 Entonces Imprimir \"Dar el valor de la base\" Leer base Imprimir \"Dar el valor de la altura\" Leer altura area = base * altura Imprimir \"El area del rectangulo es \" , area Sino Si option == 2 Entonces Imprimir \"Dar el valor de la base\" Leer base Imprimir \"Dar el valor de la altura\" Leer altura perimetro = ( 2 * base ) + ( 2 * altura ) Imprimir \"El perimetro del rectangulo es \" , perimetro Sino Imprimir \"Opcion no posible\" FinSi FinSi FinAlgoritmo Diagrama de flujo Nota: No es la \u00fanica forma en la que se pueden realizar estos ejercicios, recuerda que lo importante es resolver el problema, que hayan mas o menos pasos, diferentes formulas, etc, no significa que este mal.","title":"Ejemplos"},{"location":"11_operadores_logicos/","text":"Operadores l\u00f3gicos Un operador l\u00f3gico sirve para combinar comparaciones y en funci\u00f3n del resultado tomar una decisi\u00f3n, comprende de 3 operadores ( hay mas pero no lo veremos aqu\u00ed ) que son AND , OR y NOT . Con todo ello para realizar varias validaciones y obtener un resultado booleano . Las tablas de verdad de los operadores: AND (Y) Entrada 1 Entrada 2 Salida false false false false true false true false false true true true Regla AND nos dice que mientras exista a la entrada un false , tendremos un valor false a la salida OR (O) Entrada 1 Entrada 2 Salida false false false false true true true false true true true true Regla OR nos dice que mientras exista a la entrada un true , tendremos un valor true a la salida NOT (NO) (Inverter) Entrada Salida false true true false Regla NOT nos dice que todo lo que recibe lo invierte. Sintaxis con operadores l\u00f3gicos La forma en la que se escriben las comparaciones con operadores l\u00f3gicos es: Izquierda Centro Derecha comparaci\u00f3n operador l\u00f3gico comparaci\u00f3n (a == b) && (x > y) (5 == 8) && (9 > 4) (a >= b) || (0 == 8) (10 <= x) && (1 != -8) (a <= 2) || (0 == 8) En el caso de not aplica solo a una comparaci\u00f3n: Aplicaci\u00f3n Resultado !true false !(3 == 3) false !(6 >= 1) false !(1 != 1) true !(3 < 3) true Se pueden concatenar (unir) n comparaciones con operadores l\u00f3gicos, pero siempre se debe utilizar el operador para poder unir mas comparaciones, ejemplo: (5 == 8) && (9 > 4) || (a >= b) || (0 == 8) && !(2 == 2) Ejemplos de comparaci\u00f3n Descripci\u00f3n Resultado (9 > 4) && (3 < 6) true (8 == 3) || (2 != 3) true !true false (5 == 8) && (9 > 4) false (0 >= -5) || (0 == 8) true (10 <= 5) && (1 != -8) false !(2 == 2) false Ejemplos Ejemplo 1 Solicitar un n\u00famero de entre 0 al 20, si el n\u00famero es menor a 10 y par, indicar que \"el n\u00famero es par y menor a 10\"; si es menor a 10, pero no es par dar el mensaje \"N\u00famero menor a 10\", de lo contrario que indique que es mayor a 10. Pseudoc\u00f3digo Algoritmo OperadorLogico Imprimir \"Dar un valor entre 0 al 20\" Leer valor Si valor < 10 Y ( valor % 2 ) == 0 Entonces Imprimir \"El valor es menor a 10 y es par\" FinSi Si valor < 10 Y ( valor % 2 ) == 1 Entonces Imprimir \"El valor es menor a 10\" FinSi Si valor >= 10 Entonces Imprimir \"El numero es mayor a 10 :D\" FinSi FinAlgoritmo Diagrama de Flujo Ejemplo 2 En una variable almacena la calificaci\u00f3n, se debe verificar el valor de la calificacion es valida; es decir, calificaciones arriaba de 10 y abajo de 0 no son posibles, la calificaci\u00f3n reprobatoria es por debajo de 6 y aprobatoria arriaba de 6.0. Pseudoc\u00f3digo Algoritmo LogicoCalificacion Escribir 'Da tu calificacion :D' Leer calificacion Si calificacion > 10 O calificacion < 0 Entonces Imprimir \"Calificacion no posible\" SiNo Imprimir \"Calificacion valida\" Si calificacion < 6 Entonces Imprimir \"Estas reprobado\" FinSi Si calificacion >= 6 Entonces Imprimir \"Estas aprobado\" FinSi FinSi FinAlgoritmo Diagrama de Flujo Nota : No es la \u00fanica forma en la que se pueden realizar estos ejercicios, recuerda que lo importante es resolver el problema, que hayan mas o menos pasos, diferentes formulas, etc, no significa que este mal .","title":"Operadores l\u00f3gicos"},{"location":"11_operadores_logicos/#operadores-logicos","text":"Un operador l\u00f3gico sirve para combinar comparaciones y en funci\u00f3n del resultado tomar una decisi\u00f3n, comprende de 3 operadores ( hay mas pero no lo veremos aqu\u00ed ) que son AND , OR y NOT . Con todo ello para realizar varias validaciones y obtener un resultado booleano .","title":"Operadores l\u00f3gicos"},{"location":"11_operadores_logicos/#las-tablas-de-verdad-de-los-operadores","text":"","title":"Las tablas de verdad de los operadores:"},{"location":"11_operadores_logicos/#and-y","text":"Entrada 1 Entrada 2 Salida false false false false true false true false false true true true Regla AND nos dice que mientras exista a la entrada un false , tendremos un valor false a la salida","title":"AND (Y)"},{"location":"11_operadores_logicos/#or-o","text":"Entrada 1 Entrada 2 Salida false false false false true true true false true true true true Regla OR nos dice que mientras exista a la entrada un true , tendremos un valor true a la salida","title":"OR (O)"},{"location":"11_operadores_logicos/#not-no-inverter","text":"Entrada Salida false true true false Regla NOT nos dice que todo lo que recibe lo invierte.","title":"NOT (NO) (Inverter)"},{"location":"11_operadores_logicos/#sintaxis-con-operadores-logicos","text":"La forma en la que se escriben las comparaciones con operadores l\u00f3gicos es: Izquierda Centro Derecha comparaci\u00f3n operador l\u00f3gico comparaci\u00f3n (a == b) && (x > y) (5 == 8) && (9 > 4) (a >= b) || (0 == 8) (10 <= x) && (1 != -8) (a <= 2) || (0 == 8) En el caso de not aplica solo a una comparaci\u00f3n: Aplicaci\u00f3n Resultado !true false !(3 == 3) false !(6 >= 1) false !(1 != 1) true !(3 < 3) true Se pueden concatenar (unir) n comparaciones con operadores l\u00f3gicos, pero siempre se debe utilizar el operador para poder unir mas comparaciones, ejemplo: (5 == 8) && (9 > 4) || (a >= b) || (0 == 8) && !(2 == 2)","title":"Sintaxis con operadores l\u00f3gicos"},{"location":"11_operadores_logicos/#ejemplos-de-comparacion","text":"Descripci\u00f3n Resultado (9 > 4) && (3 < 6) true (8 == 3) || (2 != 3) true !true false (5 == 8) && (9 > 4) false (0 >= -5) || (0 == 8) true (10 <= 5) && (1 != -8) false !(2 == 2) false","title":"Ejemplos de comparaci\u00f3n"},{"location":"11_operadores_logicos/#ejemplos","text":"Ejemplo 1 Solicitar un n\u00famero de entre 0 al 20, si el n\u00famero es menor a 10 y par, indicar que \"el n\u00famero es par y menor a 10\"; si es menor a 10, pero no es par dar el mensaje \"N\u00famero menor a 10\", de lo contrario que indique que es mayor a 10. Pseudoc\u00f3digo Algoritmo OperadorLogico Imprimir \"Dar un valor entre 0 al 20\" Leer valor Si valor < 10 Y ( valor % 2 ) == 0 Entonces Imprimir \"El valor es menor a 10 y es par\" FinSi Si valor < 10 Y ( valor % 2 ) == 1 Entonces Imprimir \"El valor es menor a 10\" FinSi Si valor >= 10 Entonces Imprimir \"El numero es mayor a 10 :D\" FinSi FinAlgoritmo Diagrama de Flujo Ejemplo 2 En una variable almacena la calificaci\u00f3n, se debe verificar el valor de la calificacion es valida; es decir, calificaciones arriaba de 10 y abajo de 0 no son posibles, la calificaci\u00f3n reprobatoria es por debajo de 6 y aprobatoria arriaba de 6.0. Pseudoc\u00f3digo Algoritmo LogicoCalificacion Escribir 'Da tu calificacion :D' Leer calificacion Si calificacion > 10 O calificacion < 0 Entonces Imprimir \"Calificacion no posible\" SiNo Imprimir \"Calificacion valida\" Si calificacion < 6 Entonces Imprimir \"Estas reprobado\" FinSi Si calificacion >= 6 Entonces Imprimir \"Estas aprobado\" FinSi FinSi FinAlgoritmo Diagrama de Flujo Nota : No es la \u00fanica forma en la que se pueden realizar estos ejercicios, recuerda que lo importante es resolver el problema, que hayan mas o menos pasos, diferentes formulas, etc, no significa que este mal .","title":"Ejemplos"},{"location":"12_ciclos/","text":"Ciclos (Loops) (for, while) La estructura de repetici\u00f3n o ciclo no ayuda a realizar iteraciones para realizar acciones que se van a repetir una cantidad de veces o incluso infinitas ocasiones. Para que un ciclo termine se debe evaluar una comparaci\u00f3n y con base al resultado, puede seguir o continuar. Ejemplos de ciclos en la vida La respiraci\u00f3n humana Los latidos del coraz\u00f3n La rotaci\u00f3n de la tierra Las estaciones del a\u00f1o El ciclo de la vida El ciclo del agua La variable auxiliar Para poder lograr esto necesitamos una variable auxiliar la cual nos ayudara a saber si debemos terminar o continuar con la repetici\u00f3n. Ejemplos de nombres que recibe esta variable: (Recordar las reglas de como nombrar variables ) x i j k contador aux auxiliar count Son los nombres mas comunes que les dan a la variable que nos ayuda en el momento de que un ciclo comienza, avanza y termina, es nuestra bandera indicadora de estas tres acciones. Ejemplos Ejemplo 1 Imprimir del 1 al 10 Pseudoc\u00f3digo Algoritmo Del1al10 contador = 1 // variable auxiliar , indica en donde inicia a contar Repetir Imprimir contador < ! -- contador = contador + 1 // incremento cada iteraci\u00f3n en 1 --> Hasta Que contador > 10 FinAlgoritmo Diagrama de Flujo Ejemplo 2 Imprimir 10 veces la palabra \"hola\" Pseudoc\u00f3digo Algoritmo Hola10 contador = 1 Repetir Escribir 'Hola' contador = contador + 1 Hasta Que contador > 10 FinAlgoritmo Diagrama de Flujo Ejemplo 3 Realizar una calculadora que sume y reste, con la opci\u00f3n de salir, pero solo hasta que el usuario elija dicha opci\u00f3n, podr\u00e1 terminar el programa, de lo contrario seguir\u00e1 mostrando las opciones de operaciones que puede realizar Pseudoc\u00f3digo Algoritmo Calculadora Repetir Imprimir \"Calculadora Suma y Resta\" Imprimir \"1) Suma\" Imprimir \"2) Resta\" Imprimir \"3) Salir\" Leer opcion Si opcion == 1 Entonces Imprimir \"======= Suma =======\" Imprimir \"Dar el primer valor\" Leer numero1 Imprimir \"Dar el segundo valor\" Leer numero2 suma = numero1 + numero2 Imprimir \"La suma es: \" , suma Imprimir \"=====================\" Sino Si opcion == 2 Entonces Imprimir \"======= Resta =======\" Imprimir \"Dar el primer valor\" Leer numero1 Imprimir \"Dar el segundo valor\" Leer numero2 resta = numero1 - numero2 Imprimir \"La resta es: \" , resta Imprimir \"=====================\" SiNo Si opcion != 3 Entonces Imprimir \"******** Opcion no valida **********\" FinSi FinSi FinSi Hasta Que opcion == 3 FinAlgoritmo Diagrama de Flujo Nota : No es la \u00fanica forma en la que se pueden realizar estos ejercicios, recuerda que lo importante es resolver el problema, que hayan mas o menos pasos, diferentes formulas, etc, no significa que este mal.","title":"Ciclos (Loops) (for, while)"},{"location":"12_ciclos/#ciclos-loops-for-while","text":"La estructura de repetici\u00f3n o ciclo no ayuda a realizar iteraciones para realizar acciones que se van a repetir una cantidad de veces o incluso infinitas ocasiones. Para que un ciclo termine se debe evaluar una comparaci\u00f3n y con base al resultado, puede seguir o continuar.","title":"Ciclos (Loops) (for, while)"},{"location":"12_ciclos/#ejemplos-de-ciclos-en-la-vida","text":"La respiraci\u00f3n humana Los latidos del coraz\u00f3n La rotaci\u00f3n de la tierra Las estaciones del a\u00f1o El ciclo de la vida El ciclo del agua","title":"Ejemplos de ciclos en la vida"},{"location":"12_ciclos/#la-variable-auxiliar","text":"Para poder lograr esto necesitamos una variable auxiliar la cual nos ayudara a saber si debemos terminar o continuar con la repetici\u00f3n. Ejemplos de nombres que recibe esta variable: (Recordar las reglas de como nombrar variables ) x i j k contador aux auxiliar count Son los nombres mas comunes que les dan a la variable que nos ayuda en el momento de que un ciclo comienza, avanza y termina, es nuestra bandera indicadora de estas tres acciones.","title":"La variable auxiliar"},{"location":"12_ciclos/#ejemplos","text":"Ejemplo 1 Imprimir del 1 al 10 Pseudoc\u00f3digo Algoritmo Del1al10 contador = 1 // variable auxiliar , indica en donde inicia a contar Repetir Imprimir contador < ! -- contador = contador + 1 // incremento cada iteraci\u00f3n en 1 --> Hasta Que contador > 10 FinAlgoritmo Diagrama de Flujo Ejemplo 2 Imprimir 10 veces la palabra \"hola\" Pseudoc\u00f3digo Algoritmo Hola10 contador = 1 Repetir Escribir 'Hola' contador = contador + 1 Hasta Que contador > 10 FinAlgoritmo Diagrama de Flujo Ejemplo 3 Realizar una calculadora que sume y reste, con la opci\u00f3n de salir, pero solo hasta que el usuario elija dicha opci\u00f3n, podr\u00e1 terminar el programa, de lo contrario seguir\u00e1 mostrando las opciones de operaciones que puede realizar Pseudoc\u00f3digo Algoritmo Calculadora Repetir Imprimir \"Calculadora Suma y Resta\" Imprimir \"1) Suma\" Imprimir \"2) Resta\" Imprimir \"3) Salir\" Leer opcion Si opcion == 1 Entonces Imprimir \"======= Suma =======\" Imprimir \"Dar el primer valor\" Leer numero1 Imprimir \"Dar el segundo valor\" Leer numero2 suma = numero1 + numero2 Imprimir \"La suma es: \" , suma Imprimir \"=====================\" Sino Si opcion == 2 Entonces Imprimir \"======= Resta =======\" Imprimir \"Dar el primer valor\" Leer numero1 Imprimir \"Dar el segundo valor\" Leer numero2 resta = numero1 - numero2 Imprimir \"La resta es: \" , resta Imprimir \"=====================\" SiNo Si opcion != 3 Entonces Imprimir \"******** Opcion no valida **********\" FinSi FinSi FinSi Hasta Que opcion == 3 FinAlgoritmo Diagrama de Flujo Nota : No es la \u00fanica forma en la que se pueden realizar estos ejercicios, recuerda que lo importante es resolver el problema, que hayan mas o menos pasos, diferentes formulas, etc, no significa que este mal.","title":"Ejemplos"},{"location":"9999_bibliografia/","text":"Bibliograf\u00eda Yo mismo y mis experiencias. Nota: Agregare alg\u00fan dia","title":"Bibliograf\u00eda"},{"location":"9999_bibliografia/#bibliografia","text":"Yo mismo y mis experiencias. Nota: Agregare alg\u00fan dia","title":"Bibliograf\u00eda"},{"location":"999_algoritmos_ejercicios/","text":"Ejercicios de Algoritmos Por default se da por sentado que se deben pedir los datos al usuario para poder realizar las operaciones que se solicitan. Puedes personalizar tus algoritmos con mensajes especiales al inicio y al final (dale tu toque personal). B\u00e1sicos Realizar el calculo del per\u00edmetro de un rect\u00e1ngulo , solicitando el lado de la figura al usuario Realizar el calculo del area de un cuadrado , solicitando el lado de la figura al usuario. Realizar un programa que realice el calculo de Fuerza en la segunda Ley de Newton. La formula es \\(F=masa * aceleraci\u00f3n\\) Decisiones Solicitar un numero entero al usuario, e imprimir por pantalla si es valor par o impar Realizar una calculadora b\u00e1sica, que realice la operaci\u00f3n de sumar, restar, multiplicar, dividir. Al comenzar muestre un menu y el usuario elija la opci\u00f3n deseada. Se debe pedir el primer valor y el segundo, con ello realizar la operaci\u00f3n Hacer una calculadora de \u00e1reas geom\u00e9tricas, las opciones son: \u00c1rea del cuadrado \u00c1rea del c\u00edrculo \u00c1rea del tri\u00e1ngulo Con opci\u00f3n de salir del programa y al final imprimir el resultado con la frase \"El \u00e1rea del figura elegida es resultado\" Hacer una calculadora de ley de ohms, las opciones son: Calcular resistencia Calcular corriente Calcular voltaje Con opci\u00f3n de salir del programa y al final debe imprimir el resultado con la frase \"El resultado es valor es: \" Operadores l\u00f3gicos Solicitar al usuario su promedio actual, en valor entero, el algoritmo debe tomar la decision con bas\u00e9 al numero ingresado; si es menor a 6, imprimir \"lastima margarito\", s\u00ed es igual 6 imprimir el mensaje \"Aplicate\", s\u00ed la calificaci\u00f3n es igual 7 \"Apenitas y la libraste, metele\", si es igual a 8 debe decir \"Bastante bien, puedes mejorar\" y s\u00ed la calificaci\u00f3n es mayor a 9, decirle al usuario \"Excelente, tu muy bien\". Ciclos Imprimir del 1 al 99 Calcular el promedio final, solicita al usuario sus calificaciones parciales una a una, y al final da el mensaje \"Aprobado\", en caso que haya pasado arriba de 6 y \"Estas en repite\" si es menor. Imprimir la tabla del 8, desde \\(8 \\times 1=8\\) hasta \\(8 \\times 10=80\\) * Realizar un programa para visualizar la tabla de multiplicar que desee el usuario, el usuario dar\u00e1 el valor para la tabla, la tabla debe de ir desde el 1 hasta el 10, es decir, por ejemplo si da el numero 3, la tabla comienza en \\(3 \\times 1=3\\) ... hasta \\(3 \\times 10=30\\) Realizar un programa para visualizar la tabla de multiplicar que desee el usuario, el usuario dar\u00e1 el valor para la tabla, tambi\u00e9n debe dar el limite donde comienza hasta donde termina, es decir, por ejemplo si da el numero 5, comenzando desde el 3 hasta el 25, comenzara la tabla \\(5 \\times 3 = 15\\) ... \\(5 \\times 25=125\\) Leer 10 numeros enteros , solicitando uno a uno al usuario, e imprimir al final cu\u00e1ntos de los que ingresaron fueron par y cu\u00e1ntos impar Realizar el diagrama de flujo que convierta un numero decimal a binario; es decir, si el usuario da el valor de 8 , el programa debe imprimir 1000 **. (No es necesario que sean todos los d\u00edgitos juntos, podr\u00e1n salir uno a uno, primero el 1, despu\u00e9s el 0, el otro 0 y el ultimo 0). Tip: Investiga la formula para convertir numeros decimales a binarios. Calcular el factorial de un numero entero . Se le solicita al usuario que ingrese un numero entero el cu\u00e1l quiere calcular el factorial del mismo Calcular la potencia de un numero, solicita al usuario el numero que desea elevar y despu\u00e9s la base a la cu\u00e1l lo elevara. Ejemplo: \\(2^2= 4\\) , \\(2^3=8\\) . Tip: Recuerda como se realiza de manera manual la potencializaci\u00f3n Leer 10 numero, solicitando uno a uno al usuario, y al final se imprime por pantalla el numero m\u00e1s alto introducido de los 10. Calculadora de la segunda ley de Newton . Sale el men\u00fa indicando que desea calcular y la opci\u00f3n de salir. Despu\u00e9s solicita al usuario los valores que conoc\u00e9 e imprimir el resultado, una vez termina de hacer todas las operaciones, debe regresar al men\u00fa inicial C\u00e1lculo de la media de un conjunto de datos. Se le pregunta al usuario cuantos n\u00fameros son, comienza a pedirlos uno a uno y al final imprime el resultado de la media de todos los n\u00fameros introducidos. Realizar un programa que solicite las calificaciones del parcial; es decir, ir\u00e1 pidiendo una a una las calificaciones, y al final que diga si te vas a recursamiento o no Hacer una caja registradora, que vaya recibiendo el valor del producto y al final entregue el costo total con IVA y sin IVA; es decir, En total es $18.35 y con IVA son $21.28 , recordar que el IVA es del 16% Programa que diga si existen o no las ra\u00edces de una ecuaci\u00f3n cuadr\u00e1tica, aplicando la f\u00f3rmula general; recuerda que no existen las ra\u00edces negativas","title":"Ejercicios de Algoritmos"},{"location":"999_algoritmos_ejercicios/#ejercicios-de-algoritmos","text":"Por default se da por sentado que se deben pedir los datos al usuario para poder realizar las operaciones que se solicitan. Puedes personalizar tus algoritmos con mensajes especiales al inicio y al final (dale tu toque personal).","title":"Ejercicios de Algoritmos"},{"location":"999_algoritmos_ejercicios/#basicos","text":"Realizar el calculo del per\u00edmetro de un rect\u00e1ngulo , solicitando el lado de la figura al usuario Realizar el calculo del area de un cuadrado , solicitando el lado de la figura al usuario. Realizar un programa que realice el calculo de Fuerza en la segunda Ley de Newton. La formula es \\(F=masa * aceleraci\u00f3n\\)","title":"B\u00e1sicos"},{"location":"999_algoritmos_ejercicios/#decisiones","text":"Solicitar un numero entero al usuario, e imprimir por pantalla si es valor par o impar Realizar una calculadora b\u00e1sica, que realice la operaci\u00f3n de sumar, restar, multiplicar, dividir. Al comenzar muestre un menu y el usuario elija la opci\u00f3n deseada. Se debe pedir el primer valor y el segundo, con ello realizar la operaci\u00f3n Hacer una calculadora de \u00e1reas geom\u00e9tricas, las opciones son: \u00c1rea del cuadrado \u00c1rea del c\u00edrculo \u00c1rea del tri\u00e1ngulo Con opci\u00f3n de salir del programa y al final imprimir el resultado con la frase \"El \u00e1rea del figura elegida es resultado\" Hacer una calculadora de ley de ohms, las opciones son: Calcular resistencia Calcular corriente Calcular voltaje Con opci\u00f3n de salir del programa y al final debe imprimir el resultado con la frase \"El resultado es valor es: \"","title":"Decisiones"},{"location":"999_algoritmos_ejercicios/#operadores-logicos","text":"Solicitar al usuario su promedio actual, en valor entero, el algoritmo debe tomar la decision con bas\u00e9 al numero ingresado; si es menor a 6, imprimir \"lastima margarito\", s\u00ed es igual 6 imprimir el mensaje \"Aplicate\", s\u00ed la calificaci\u00f3n es igual 7 \"Apenitas y la libraste, metele\", si es igual a 8 debe decir \"Bastante bien, puedes mejorar\" y s\u00ed la calificaci\u00f3n es mayor a 9, decirle al usuario \"Excelente, tu muy bien\".","title":"Operadores l\u00f3gicos"},{"location":"999_algoritmos_ejercicios/#ciclos","text":"Imprimir del 1 al 99 Calcular el promedio final, solicita al usuario sus calificaciones parciales una a una, y al final da el mensaje \"Aprobado\", en caso que haya pasado arriba de 6 y \"Estas en repite\" si es menor. Imprimir la tabla del 8, desde \\(8 \\times 1=8\\) hasta \\(8 \\times 10=80\\) * Realizar un programa para visualizar la tabla de multiplicar que desee el usuario, el usuario dar\u00e1 el valor para la tabla, la tabla debe de ir desde el 1 hasta el 10, es decir, por ejemplo si da el numero 3, la tabla comienza en \\(3 \\times 1=3\\) ... hasta \\(3 \\times 10=30\\) Realizar un programa para visualizar la tabla de multiplicar que desee el usuario, el usuario dar\u00e1 el valor para la tabla, tambi\u00e9n debe dar el limite donde comienza hasta donde termina, es decir, por ejemplo si da el numero 5, comenzando desde el 3 hasta el 25, comenzara la tabla \\(5 \\times 3 = 15\\) ... \\(5 \\times 25=125\\) Leer 10 numeros enteros , solicitando uno a uno al usuario, e imprimir al final cu\u00e1ntos de los que ingresaron fueron par y cu\u00e1ntos impar Realizar el diagrama de flujo que convierta un numero decimal a binario; es decir, si el usuario da el valor de 8 , el programa debe imprimir 1000 **. (No es necesario que sean todos los d\u00edgitos juntos, podr\u00e1n salir uno a uno, primero el 1, despu\u00e9s el 0, el otro 0 y el ultimo 0). Tip: Investiga la formula para convertir numeros decimales a binarios. Calcular el factorial de un numero entero . Se le solicita al usuario que ingrese un numero entero el cu\u00e1l quiere calcular el factorial del mismo Calcular la potencia de un numero, solicita al usuario el numero que desea elevar y despu\u00e9s la base a la cu\u00e1l lo elevara. Ejemplo: \\(2^2= 4\\) , \\(2^3=8\\) . Tip: Recuerda como se realiza de manera manual la potencializaci\u00f3n Leer 10 numero, solicitando uno a uno al usuario, y al final se imprime por pantalla el numero m\u00e1s alto introducido de los 10. Calculadora de la segunda ley de Newton . Sale el men\u00fa indicando que desea calcular y la opci\u00f3n de salir. Despu\u00e9s solicita al usuario los valores que conoc\u00e9 e imprimir el resultado, una vez termina de hacer todas las operaciones, debe regresar al men\u00fa inicial C\u00e1lculo de la media de un conjunto de datos. Se le pregunta al usuario cuantos n\u00fameros son, comienza a pedirlos uno a uno y al final imprime el resultado de la media de todos los n\u00fameros introducidos. Realizar un programa que solicite las calificaciones del parcial; es decir, ir\u00e1 pidiendo una a una las calificaciones, y al final que diga si te vas a recursamiento o no Hacer una caja registradora, que vaya recibiendo el valor del producto y al final entregue el costo total con IVA y sin IVA; es decir, En total es $18.35 y con IVA son $21.28 , recordar que el IVA es del 16% Programa que diga si existen o no las ra\u00edces de una ecuaci\u00f3n cuadr\u00e1tica, aplicando la f\u00f3rmula general; recuerda que no existen las ra\u00edces negativas","title":"Ciclos"},{"location":"extras/pseint/","text":"Introducci\u00f3n a PSEINT Comando de salida a la pantalla Imprimir \"expresion\" Mostrar \"expresion\" Escribir \"expresion\" Sintaxis para declarar un variable y su tipo Definir variable como Char Definir variable como Entero Definir variable como Logico Definir variable como Real \u00bfC\u00f3mo asignar un valor a una variable? variable = dato //Este forma es la que utilizaremos variable = dato Condicionales IF Switch Case Bucles Mientras Repetir Para Funciones Las funciones en programacion son fragmentos de programa dise\u00f1ados para ser reutilizado en multiples ocaciones. Tiene tres componentes importantes: Parametros: Valores que recibe la funcion como entrada Codigo de la funcion: Lo que hace la funcion Resultado: Valor final que entrega la funcion Existen dos tipos de funciones: Sin Retorno //No se le devuelve el resultado a la funcion Con Retorno //Se le devuelve el resultado a la funcion aporteDe = \"Rafael A. Beltran Santos\"","title":"Introducci\u00f3n a PSEINT"},{"location":"extras/pseint/#introduccion-a-pseint","text":"","title":"Introducci\u00f3n a PSEINT"},{"location":"extras/pseint/#comando-de-salida-a-la-pantalla","text":"Imprimir \"expresion\" Mostrar \"expresion\" Escribir \"expresion\"","title":"Comando de salida a la pantalla"},{"location":"extras/pseint/#sintaxis-para-declarar-un-variable-y-su-tipo","text":"Definir variable como Char Definir variable como Entero Definir variable como Logico Definir variable como Real","title":"Sintaxis para declarar un variable y su tipo"},{"location":"extras/pseint/#como-asignar-un-valor-a-una-variable","text":"variable = dato //Este forma es la que utilizaremos variable = dato","title":"\u00bfC\u00f3mo asignar un valor a una variable?"},{"location":"extras/pseint/#condicionales","text":"IF Switch Case","title":"Condicionales"},{"location":"extras/pseint/#bucles","text":"Mientras Repetir Para","title":"Bucles"},{"location":"extras/pseint/#funciones","text":"Las funciones en programacion son fragmentos de programa dise\u00f1ados para ser reutilizado en multiples ocaciones. Tiene tres componentes importantes: Parametros: Valores que recibe la funcion como entrada Codigo de la funcion: Lo que hace la funcion Resultado: Valor final que entrega la funcion Existen dos tipos de funciones: Sin Retorno //No se le devuelve el resultado a la funcion Con Retorno //Se le devuelve el resultado a la funcion aporteDe = \"Rafael A. Beltran Santos\"","title":"Funciones"},{"location":"extras/pseint/02_if/","text":"Condicional if //Estructura If Si comparaci\u00f3n_verdadera Entonces acciones_por_verdadero FinSi //Estructura If-Else Si comparaci\u00f3n_verdadera Entonces acciones_por_verdadero SiNo acciones_por_falso FinSi //Ejemplo Algoritmo ejemplo Imprimir \"Dame un numero:\" Leer num Si num > 2 Entonces Imprimir num, \" es mayor que 2\" SiNo Imprimir num, \" es menor que 2\" FinSi FinAlgoritmo aporteDe = \"Rafael A. Beltran Santos\"","title":"Condicional if"},{"location":"extras/pseint/02_if/#condicional-if","text":"//Estructura If Si comparaci\u00f3n_verdadera Entonces acciones_por_verdadero FinSi //Estructura If-Else Si comparaci\u00f3n_verdadera Entonces acciones_por_verdadero SiNo acciones_por_falso FinSi //Ejemplo Algoritmo ejemplo Imprimir \"Dame un numero:\" Leer num Si num > 2 Entonces Imprimir num, \" es mayor que 2\" SiNo Imprimir num, \" es menor que 2\" FinSi FinAlgoritmo aporteDe = \"Rafael A. Beltran Santos\"","title":"Condicional if"},{"location":"extras/pseint/03_switch_case/","text":"Switch Case //Estructura Segun variable Hacer opcion_1: secuencia_de_acciones1 opcion_2 secuencia_de_acciones2 opcion_3: secuencia_de_acciones3 //Se pueden poner cuantas opciones quieras De otro modo secuencia_de_otro_modo FinSegun //Ejemplo Algoritmo ejemplo Imprimir \"Dame un numero de los que aparecen abajo:\" Imprimir \"1\" Imprimir \"2\" Imprimir \"3\" Leer num Segun num Hacer 1: Imprimir \"1, 1, 1\" 2: Imprimir \"2, 2, 2\" 3: Imprimir \"3, 3, 3\" De otro modo Imprimir \"Esa opcion no esta disponible\" FinSegun FinAlgoritmo aporteDe = \"Rafael A. Beltran Santos\"","title":"Switch Case"},{"location":"extras/pseint/03_switch_case/#switch-case","text":"//Estructura Segun variable Hacer opcion_1: secuencia_de_acciones1 opcion_2 secuencia_de_acciones2 opcion_3: secuencia_de_acciones3 //Se pueden poner cuantas opciones quieras De otro modo secuencia_de_otro_modo FinSegun //Ejemplo Algoritmo ejemplo Imprimir \"Dame un numero de los que aparecen abajo:\" Imprimir \"1\" Imprimir \"2\" Imprimir \"3\" Leer num Segun num Hacer 1: Imprimir \"1, 1, 1\" 2: Imprimir \"2, 2, 2\" 3: Imprimir \"3, 3, 3\" De otro modo Imprimir \"Esa opcion no esta disponible\" FinSegun FinAlgoritmo aporteDe = \"Rafael A. Beltran Santos\"","title":"Switch Case"},{"location":"extras/pseint/04_para/","text":"Bucle Para (for) //Estructura Para variable = valor_inicial Hasta valor_final Con Paso paso Hacer secuencia_acciones FinPara //Ejemplo Algoritmo ejemplo Para i = 20 Hasta 200 Con Paso 20 Hacer //El paso indica cuando se le va a ir sumando a i, se detentra cuando i sea igual que 200 Mostrar i FinPara FinAlgoritmo aporteDe = \"Rafael A. Beltran Santos\"","title":"Bucle Para (for)"},{"location":"extras/pseint/04_para/#bucle-para-for","text":"//Estructura Para variable = valor_inicial Hasta valor_final Con Paso paso Hacer secuencia_acciones FinPara //Ejemplo Algoritmo ejemplo Para i = 20 Hasta 200 Con Paso 20 Hacer //El paso indica cuando se le va a ir sumando a i, se detentra cuando i sea igual que 200 Mostrar i FinPara FinAlgoritmo aporteDe = \"Rafael A. Beltran Santos\"","title":"Bucle Para (for)"},{"location":"extras/pseint/05_mientras/","text":"Bucle Mientras (while) //Estructura Mientras expresion_logica Hacer secuencia_acciones FinMientras //Ejemplo Algoritmo ejemplo i = 0 Mientras i < 10 Hacer i = i + 10 Imprimir \"i\" FinMientras FinAlgoritmo aporteDe = \"Rafael A. Beltran Santos\"","title":"Bucle Mientras (while)"},{"location":"extras/pseint/05_mientras/#bucle-mientras-while","text":"//Estructura Mientras expresion_logica Hacer secuencia_acciones FinMientras //Ejemplo Algoritmo ejemplo i = 0 Mientras i < 10 Hacer i = i + 10 Imprimir \"i\" FinMientras FinAlgoritmo aporteDe = \"Rafael A. Beltran Santos\"","title":"Bucle Mientras (while)"},{"location":"extras/pseint/06_repetir/","text":"Bucle Repetir (do-while) //Estructura Repetir secuencia_acciones Hasta Que expresion_logica //Ejemplo Algoritmo ejemplo i = 10 Repetir i = i + 10 Imprimir i Hasta Que i == 100 FinAlgoritmo aporteDe = \"Rafael A. Beltran Santos\"","title":"Bucle Repetir (do-while)"},{"location":"extras/pseint/06_repetir/#bucle-repetir-do-while","text":"//Estructura Repetir secuencia_acciones Hasta Que expresion_logica //Ejemplo Algoritmo ejemplo i = 10 Repetir i = i + 10 Imprimir i Hasta Que i == 100 FinAlgoritmo aporteDe = \"Rafael A. Beltran Santos\"","title":"Bucle Repetir (do-while)"},{"location":"extras/pseint/07_noreturn/","text":"Funci\u00f3n Sin Retorno //Estructura Funcion nombre(argumentos) secuencia_de_acciones FinFuncion Algoritmo funct nombre(argumentos) FinAlgoritmo //Ejemplo Funcion texto() Imprimir \"Hola mundo\" FinFuncion Algoritmo funct texto() FinAlgoritmo //La salida a pantalla de este programa sera Hola mundo aporteDe = \"Rafael A. Beltran Santos\"","title":"Funci\u00f3n Sin Retorno"},{"location":"extras/pseint/07_noreturn/#funcion-sin-retorno","text":"//Estructura Funcion nombre(argumentos) secuencia_de_acciones FinFuncion Algoritmo funct nombre(argumentos) FinAlgoritmo //Ejemplo Funcion texto() Imprimir \"Hola mundo\" FinFuncion Algoritmo funct texto() FinAlgoritmo //La salida a pantalla de este programa sera Hola mundo aporteDe = \"Rafael A. Beltran Santos\"","title":"Funci\u00f3n Sin Retorno"},{"location":"extras/pseint/08_return/","text":"Funci\u00f3n Con Retorno //Estructura Funcion variable_de_retorno = nombre(n1, n2) secuencia_de_acciones FinFuncion Algoritmo funct nombre(n1, n2) FinAlgoritmo //Ejemplo Funcion operacion = suma(n1, n2) operacion = n1 + n2 FinFuncion Algoritmo funct Imprimir \"El resultado de n1 + n2 es: \" , suma(10, 50) FinAlgoritmo //El resultado de n1 + n2 es: 60 aporteDe = \"Rafael A. Beltran Santos\"","title":"Funci\u00f3n Con Retorno"},{"location":"extras/pseint/08_return/#funcion-con-retorno","text":"//Estructura Funcion variable_de_retorno = nombre(n1, n2) secuencia_de_acciones FinFuncion Algoritmo funct nombre(n1, n2) FinAlgoritmo //Ejemplo Funcion operacion = suma(n1, n2) operacion = n1 + n2 FinFuncion Algoritmo funct Imprimir \"El resultado de n1 + n2 es: \" , suma(10, 50) FinAlgoritmo //El resultado de n1 + n2 es: 60 aporteDe = \"Rafael A. Beltran Santos\"","title":"Funci\u00f3n Con Retorno"},{"location":"tags.html","text":"Contents grouped by tag","title":"Tags"},{"location":"tags.html#contents-grouped-by-tag","text":"","title":"Contents grouped by tag"}]}